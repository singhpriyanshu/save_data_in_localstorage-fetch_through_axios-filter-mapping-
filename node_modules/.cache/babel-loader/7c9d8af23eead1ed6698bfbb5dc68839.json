{"ast":null,"code":"import _slicedToArray from \"/home/rexweb/Desktop/simplelif/lifecycle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rexweb/Desktop/simplelif/lifecycle/src/Country.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport const Country = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        countries = _useState2[0],\n        setCountries = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        load = _useState4[0],\n        setLoad = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(res => {\n      setCountries(res.data);\n      setLoad(true);\n    }).catch(err => {\n      setError(err.message);\n      setLoad(true);\n    });\n  }, []);\n\n  if (load) {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, error ? React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, error.message) : countries.map((country, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, country.name)));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n};\nexport default Country;","map":{"version":3,"sources":["/home/rexweb/Desktop/simplelif/lifecycle/src/Country.js"],"names":["React","useEffect","useState","axios","Country","countries","setCountries","load","setLoad","error","setError","get","then","res","data","catch","err","message","map","country","index","name"],"mappings":";;AACA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACSF,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,QAClBG,SADkB;AAAA,QACPC,YADO;;AAAA,qBAEDJ,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,QAElBK,IAFkB;AAAA,QAEZC,OAFY;;AAAA,qBAGCN,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGlBO,KAHkB;AAAA,QAGXC,QAHW;;AAKzBT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACQ,GAAN,CAAU,sCAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACTP,MAAAA,YAAY,CAACO,GAAG,CAACC,IAAL,CAAZ;AACAN,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAJL,EAKKO,KALL,CAKWC,GAAG,IAAI;AACVN,MAAAA,QAAQ,CAACM,GAAG,CAACC,OAAL,CAAR;AACAT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;;AAaA,MAAID,IAAJ,EAAU;AACN,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHE,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACQ,OAAX,CAAH,GAA8BZ,SAAS,CAACa,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,OAAO,CAACE,IAAzB,CAAlC,CADhC,CAAR;AAGH,GAJD,MAIO;AACH,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;AACJ,CA7BM;AA8BP,eAAejB,OAAf","sourcesContent":["\nimport React,{useEffect,useState} from 'react';\nimport axios from 'axios';\n\nexport const Country = () => {\n    const [countries, setCountries] = useState([]);\n    const [load, setLoad] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        axios.get('https://restcountries.eu/rest/v2/all')\n            .then(res => {\n                setCountries(res.data);\n                setLoad(true);\n            })\n            .catch(err => {\n                setError(err.message);\n                setLoad(true)\n            })\n    }, []);\n    \n    \n    if (load) {\n        return (<ul>\n            {error ? <li>{error.message}</li> : countries.map((country, index) => <li key={index}>{country.name}</li>)}\n        </ul>);\n    } else {\n        return (\n            <div>\n                Loading...\n            </div>\n        );\n    }\n};\nexport default Country"]},"metadata":{},"sourceType":"module"}